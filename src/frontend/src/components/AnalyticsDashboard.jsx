import { PieChart, Pie, Cell, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LineChart, Line } from 'recharts'
import { MdTrendingUp, MdTrendingDown, MdAttachMoney, MdDateRange } from 'react-icons/md'

const AnalyticsDashboard = ({ data, onClose }) => {
  if (!data) return null

  // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
  const categoryData = data.categoryBreakdown?.map(item => ({
    name: item.category,
    value: item.amount,
    color: item.color || '#2D9A86'
  })) || []

  const monthlyData = data.monthlyTrends?.map(item => ({
    month: item.month,
    income: item.income,
    expenses: item.expenses,
    balance: item.balance
  })) || []

  const topTransactions = data.topTransactions || []

  const COLORS = ['#2D9A86', '#EEFE6D', '#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57']

  return (
      <div className="analytics-dashboard">
        <button onClick={onClose} className="close-button">
          √ó
        </button>
        <div className="dashboard-header">
          <h2>üìä –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</h2>
          <p>–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∞—à–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö</p>
        </div>

        <div className="dashboard-grid">
          {/* –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
          <div className="metrics-section">
            <h3>üìà –ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏</h3>
            <div className="metrics-grid">
              <div className="metric-card">
                <div className="metric-icon">
                  <MdAttachMoney size={24} color="#2D9A86" />
                </div>
                <div className="metric-content">
                  <h4>–û–±—â–∏–π –±–∞–ª–∞–Ω—Å</h4>
                  <p className="metric-value">{data.totalBalance?.toLocaleString()} ‚ÇΩ</p>
                </div>
              </div>

              <div className="metric-card">
                <div className="metric-icon">
                  <MdTrendingUp size={24} color="#2D9A86" />
                </div>
                <div className="metric-content">
                  <h4>–î–æ—Ö–æ–¥—ã</h4>
                  <p className="metric-value positive">{data.totalIncome?.toLocaleString()} ‚ÇΩ</p>
                </div>
              </div>

              <div className="metric-card">
                <div className="metric-icon">
                  <TrendingDown size={24} color="#ff6b6b" />
                </div>
                <div className="metric-content">
                  <h4>–†–∞—Å—Ö–æ–¥—ã</h4>
                  <p className="metric-value negative">{data.totalExpenses?.toLocaleString()} ‚ÇΩ</p>
                </div>
              </div>

              <div className="metric-card">
                <div className="metric-icon">
                  <Calendar size={24} color="#EEFE6D" />
                </div>
                <div className="metric-content">
                  <h4>–ü–µ—Ä–∏–æ–¥</h4>
                  <p className="metric-value">{data.period}</p>
                </div>
              </div>
            </div>
          </div>

          {/* –ì—Ä–∞—Ñ–∏–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
          {categoryData.length > 0 && (
              <div className="chart-section">
                <h3>ü•ß –†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</h3>
                <div className="chart-container">
                  <ResponsiveContainer width="100%" height={300}>
                    <PieChart>
                      <Pie
                          data={categoryData}
                          cx="50%"
                          cy="50%"
                          labelLine={false}
                          label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}
                          outerRadius={80}
                          fill="#8884d8"
                          dataKey="value"
                      >
                        {categoryData.map((entry, index) => (
                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                        ))}
                      </Pie>
                      <Tooltip formatter={(value) => [`${value.toLocaleString()} ‚ÇΩ`, '–°—É–º–º–∞']} />
                    </PieChart>
                  </ResponsiveContainer>
                </div>
              </div>
          )}

          {/* –¢—Ä–µ–Ω–¥ –ø–æ –º–µ—Å—è—Ü–∞–º */}
          {monthlyData.length > 0 && (
              <div className="chart-section">
                <h3>üìà –î–∏–Ω–∞–º–∏–∫–∞ –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤</h3>
                <div className="chart-container">
                  <ResponsiveContainer width="100%" height={300}>
                    <LineChart data={monthlyData}>
                      <CartesianGrid strokeDasharray="3 3" />
                      <XAxis dataKey="month" />
                      <YAxis />
                      <Tooltip formatter={(value) => [`${value.toLocaleString()} ‚ÇΩ`, '']} />
                      <Line
                          type="monotone"
                          dataKey="income"
                          stroke="#2D9A86"
                          strokeWidth={3}
                          name="–î–æ—Ö–æ–¥—ã"
                      />
                      <Line
                          type="monotone"
                          dataKey="expenses"
                          stroke="#ff6b6b"
                          strokeWidth={3}
                          name="–†–∞—Å—Ö–æ–¥—ã"
                      />
                    </LineChart>
                  </ResponsiveContainer>
                </div>
              </div>
          )}

          {/* –¢–æ–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π */}
          {topTransactions.length > 0 && (
              <div className="transactions-section">
                <h3>üí≥ –ö—Ä—É–ø–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</h3>
                <div className="transactions-list">
                  {topTransactions.map((transaction, index) => (
                      <div key={index} className="transaction-item">
                        <div className="transaction-info">
                          <div className="transaction-category">
                            {transaction.category}
                          </div>
                          <div className="transaction-description">
                            {transaction.description}
                          </div>
                          <div className="transaction-date">
                            {transaction.date}
                          </div>
                        </div>
                        <div className={`transaction-amount ${transaction.type}`}>
                          {transaction.type === 'expense' ? '-' : '+'}
                          {transaction.amount.toLocaleString()} ‚ÇΩ
                        </div>
                      </div>
                  ))}
                </div>
              </div>
          )}

          {/* –ò–Ω—Å–∞–π—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
          <div className="insights-section">
            <h3>üí° –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã</h3>
            <div className="insights-grid">
              {data.insights?.map((insight, index) => (
                  <div key={index} className="insight-card">
                    <div className="insight-icon">
                      {insight.type === 'positive' ? '‚úÖ' :
                          insight.type === 'warning' ? '‚ö†Ô∏è' : 'üí°'}
                    </div>
                    <div className="insight-content">
                      <h4>{insight.title}</h4>
                      <p>{insight.description}</p>
                    </div>
                  </div>
              ))}
            </div>
          </div>

          <div className="recommendations-section">
            <h3>üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>
            <div className="recommendations-grid">
              {data.recommendations?.map((rec, index) => (
                  <div key={index} className="recommendation-card">
                    <div className="rec-icon">üí°</div>
                    <div className="rec-content">
                      <h4>{rec.title}</h4>
                      <p>{rec.description}</p>
                      {rec.impact && (
                          <div className="rec-impact">
                            –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—è: {rec.impact}
                          </div>
                      )}
                    </div>
                  </div>
              ))}
            </div>
          </div>
        </div>
      </div>
  )
}

export default AnalyticsDashboard